### Full Setup and Connection Instructions for Hydroponics Precision Farming Sensors and Equipment

#### Components Needed:
1. **Microcontroller**: Arduino, Raspberry Pi, or ESP8266/ESP32
2. **Sensors**:
    - DS18B20 Waterproof Temperature Sensor
    - DHT22/AM2302
    - Analog pH Sensor Kit
    - Gravity EC Sensor
    - Various Ion-Selective Electrodes (for Nitrogen, Phosphorus, Potassium, etc.)
    - BH1750 Digital Light Sensor
3. **Relay Modules**
4. **Submersible Water Pump**
5. **LED Grow Lights**
6. **Peristaltic Pump**
7. **pH and EC Calibration Solutions**
8. **Breadboard and Jumper Wires**

#### Step-by-Step Setup and Coding Instructions

### 1. Setting Up the Microcontroller and Sensors

#### Wiring Sensors to the Microcontroller

1. **DS18B20 Waterproof Temperature Sensor**:
    - Connect VCC to 3.3V
    - Connect GND to GND
    - Connect Data to digital pin D2

2. **DHT22/AM2302**:
    - Connect VCC to 3.3V or 5V
    - Connect GND to GND
    - Connect Data to digital pin D4

3. **Analog pH Sensor Kit**:
    - Connect VCC to 5V
    - Connect GND to GND
    - Connect Analog output to A0

4. **Gravity EC Sensor**:
    - Connect VCC to 5V
    - Connect GND to GND
    - Connect Analog output to A1

5. **BH1750 Digital Light Sensor**:
    - Connect VCC to 3.3V
    - Connect GND to GND
    - Connect SDA to A4
    - Connect SCL to A5

### 2. Programming the Microcontroller

#### Arduino Code Example

```cpp
#include <OneWire.h>
#include <DallasTemperature.h>
#include <DHT.h>
#include <Wire.h>
#include <BH1750.h>

#define ONE_WIRE_BUS 2
#define DHTPIN 4
#define DHTTYPE DHT22

OneWire oneWire(ONE_WIRE_BUS);
DallasTemperature sensors(&oneWire);
DHT dht(DHTPIN, DHTTYPE);
BH1750 lightMeter;

void setup() {
  Serial.begin(9600);
  sensors.begin();
  dht.begin();
  Wire.begin();
  lightMeter.begin();
}

void loop() {
  sensors.requestTemperatures();
  float waterTemp = sensors.getTempCByIndex(0);
  float humidity = dht.readHumidity();
  float airTemp = dht.readTemperature();
  uint16_t lux = lightMeter.readLightLevel();

  Serial.print("Water Temp: ");
  Serial.print(waterTemp);
  Serial.print(" °C\tHumidity: ");
  Serial.print(humidity);
  Serial.print(" %\tAir Temp: ");
  Serial.print(airTemp);
  Serial.print(" °C\tLight: ");
  Serial.print(lux);
  Serial.println(" lx");

  delay(2000);
}
```

### 3. Storing Data in a .CSV File

#### Using Python and Raspberry Pi for Data Logging

1. **Set up Raspberry Pi** with the required libraries:

```sh
sudo apt-get update
sudo apt-get install python3-pip
pip3 install adafruit-circuitpython-dht
pip3 install adafruit-circuitpython-bh1750
pip3 install csv
```

2. **Python Code for Reading Sensors and Storing Data**:

```python
import time
import csv
import board
import adafruit_dht
from smbus2 import SMBus
import adafruit_bh1750

i2c = board.I2C()
light_sensor = adafruit_bh1750.BH1750(i2c)
dht_device = adafruit_dht.DHT22(board.D4)

def read_sensors():
    water_temp = read_water_temp()  # Add your function to read water temperature
    air_temp = dht_device.temperature
    humidity = dht_device.humidity
    light = light_sensor.lux
    return water_temp, air_temp, humidity, light

def write_to_csv(data):
    with open('/home/pi/sensor_data.csv', mode='a') as file:
        writer = csv.writer(file)
        writer.writerow(data)

def main():
    while True:
        sensor_data = read_sensors()
        write_to_csv(sensor_data)
        time.sleep(2)

if __name__ == "__main__":
    main()
```

### 4. Connecting and Controlling Relays for Pumps and Lights

1. **Wiring Relays**:
    - Connect VCC to 5V
    - Connect GND to GND
    - Connect IN to digital pins (e.g., D5 for water pump, D6 for grow lights)

2. **Arduino Code to Control Relays**:

```cpp
#define PUMP_PIN 5
#define LIGHT_PIN 6

void setup() {
  pinMode(PUMP_PIN, OUTPUT);
  pinMode(LIGHT_PIN, OUTPUT);
}

void loop() {
  digitalWrite(PUMP_PIN, HIGH);  // Turn on the water pump
  delay(10000);                  // Run for 10 seconds
  digitalWrite(PUMP_PIN, LOW);   // Turn off the water pump

  digitalWrite(LIGHT_PIN, HIGH); // Turn on the grow lights
  delay(3600000);                // Run for 1 hour
  digitalWrite(LIGHT_PIN, LOW);  // Turn off the grow lights
}
```

### 5. Setting Up Calibration for pH and EC Sensors

1. **Calibrating pH Sensor**:
    - Use calibration solutions (e.g., pH 4, 7, and 10)
    - Adjust the code to calibrate according to the sensor’s datasheet.

2. **Calibrating EC Sensor**:
    - Use EC standard solutions
    - Follow the sensor's datasheet instructions for calibration.

### Summary

1. **Connect sensors to the microcontroller** as per the wiring instructions.
2. **Upload the Arduino code** to read sensor values.
3. **Set up a Raspberry Pi** to log data into a .csv file using the provided Python script.
4. **Wire relays** to control pumps and lights, and upload the Arduino code to automate them.
5. **Calibrate the pH and EC sensors** as per their datasheets for accurate measurements.
